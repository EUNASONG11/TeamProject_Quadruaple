<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.project_quadruaple.search.SearchMapper">

    <!-- 여행 지역 검색 쿼리 -->
    <select id="getTripLocation" resultType="com.green.project_quadruaple.search.model.LocationResponse">
        SELECT
        location_id AS locationId,
        title AS locationTitle,
        location_pic AS locationPic
        FROM location
        WHERE title LIKE CONCAT('%', #{search_word}, '%')
    </select>

    <resultMap id="LocationResponseMap" type="com.green.project_quadruaple.search.model.LocationResponse">
        <result property="code" column="code" />
        <result property="Title" column="title" />
        <result property="locationPic" column="location_pic" />
        <result property="locationId" column="location_id" />
    </resultMap>

    <select id="selStrfShortInfoBasic">
        SELECT
            s.strf_id
            , s.category AS category
            , s.title AS title
            , s.lat AS lat
            , s.lng AS lng
            , s.`explain` AS `explain`
            , sp.pic_name AS picTitle
            , COALESCE(w.wishlist_count, 0) AS wishCnt
            , COALESCE(r1.review_count, 0) AS ratingCnt
            , COALESCE(r1.avgRating, 0) AS avgRating
            , CASE
            WHEN uw.user_id IS NOT NULL THEN 1
            ELSE 0
            END AS wishIn
            , CASE
            WHEN r2.user_id IS NOT NULL THEN 1
            ELSE 0
            END AS ratingIn
            , s.start_at
            , s.end_at
        FROM stay_tour_restaur_fest s
        INNER JOIN location_detail ld
            ON ld.location_detail_id = s.location_detail_id
        LEFT JOIN (
        SELECT strf_id, COUNT(*) AS wishlist_count
        FROM wishlist
        GROUP BY strf_id
        ) w
            ON s.strf_id = w.strf_id
        LEFT JOIN strf_pic sp
            ON sp.strf_id = s.strf_id
        LEFT JOIN (
        SELECT
            strf_id
            , COUNT(*) AS review_count
            , avg(rating) AS avgRating
        FROM review
        GROUP BY strf_id
        ) r1
            ON s.strf_id = r1.strf_id
        LEFT JOIN (
        SELECT strf_id, user_id
        FROM wishlist
        WHERE user_id = #{userId}
        ) uw
            ON s.strf_id = uw.strf_id
        LEFT JOIN (
        SELECT strf_id, user_id
        FROM review
        WHERE user_id = #{userId}
        ) r2
        ON s.strf_id = r2.strf_id
        WHERE ld.location_id in
        <foreach collection="locationIdList" item="id" open="(" separator="," close=")">
            #{id.locationId}
        </foreach>
        <if test="searchWord != null">
            AND s.title LIKE '%${searchWord}%' OR title LIKE '%${searchWord}%'
        </if>
        <if test="category != null">
            AND s.category = #{category}
        </if>
        GROUP BY s.strf_id
        ORDER BY avgRating DESC, wishIn DESC
        LIMIT #{startIdx}, #{size}
    </select>

    <select id="selLocationIdByTripId">
        SELECT
            l.location_id AS locationId
            , l.title AS locationTitle
        FROM trip t
        INNER JOIN trip_location tl
            ON tl.trip_id = t.trip_id
        INNER JOIN location l
            ON l.location_id = tl.location_id
        WHERE t.trip_id = #{tripId}
    </select>


    <select id="searchBasicList">
        (
        SELECT s.title AS searchTerm, 'recent' AS type, r.inquired_at AS inquiredAt
        , NULL AS popularCount
        FROM recent r
        JOIN stay_tour_restaur_fest s ON r.strf_id = s.strf_id
        WHERE r.user_id = #{userId} AND r.undo_recent = 0
        )
        UNION ALL
        (
        SELECT s.title AS searchTerm, 'popular' AS type,
        NULL AS inquiredAt, COUNT(*) AS popularCount
        FROM recent r
        JOIN stay_tour_restaur_fest s ON r.strf_id = s.strf_id
        WHERE r.inquired_at <![CDATA[ >= ]]> DATE_SUB(CURDATE(), INTERVAL 3 MONTH)
        GROUP BY s.title
        )
        ORDER BY
        CASE WHEN type = 'recent' THEN inquiredAt END DESC,
        CASE WHEN type = 'popular' THEN popularCount END DESC;
        LIMIT #{startIdx}, #{size}
    </select>

    <select id="searchAllList">
        SELECT
        s.strf_id AS strfId, s.title AS strfTitle, s.category, l.title AS locationName ,
        AVG(r.rating) AS averageRating, COUNT(r.review_id) AS reviewCount, COUNT(w.user_id) AS wishlistCount,
        IF(EXISTS(SELECT 1 FROM wishlist WHERE user_id = #{userId} AND strf_id = s.strf_id), 1, 0) AS userWishlist,
        GROUP_CONCAT(a.title) AS amenities
        FROM stay_tour_restaur_fest s
        JOIN location_detail ld ON s.location_detail_id = ld.location_detail_id
        JOIN location l ON ld.location_id = l.location_id
        LEFT JOIN review r ON s.strf_id = r.strf_id
        LEFT JOIN wishlist w ON s.strf_id = w.strf_id AND w.user_id = #{userId}
        LEFT JOIN amenipoint ap ON s.strf_id = ap.strf_id
        LEFT JOIN amenity a ON ap.amenity_id = a.amenity_id
        WHERE
        <if test="searchWord != null">
        s.title LIKE CONCAT('%', #{searchWord}, '%') OR
        l.title LIKE CONCAT('%', #{searchWord}, '%') OR
        ld.detail_title LIKE CONCAT('%', #{searchWord}, '%') OR
        a.title LIKE CONCAT('%', #{searchWord}, '%')
        </if>
        <if test="category != null">
        s.category LIKE CONCAT('%', #{searchWord}, '%') OR
        </if>
        GROUP BY s.strf_id
        ORDER BY s.created_at DESC
        LIMIT #{startIdx}, #{size}
    </select>

    <select id="searchCategoryWithFilters">
        SELECT s.strf_id AS strfId , s.title AS strfTitle , s.category, l.title AS locationName, AVG(r.rating) AS averageRating,
        COUNT(r.review_id) AS reviewCount, COUNT(w.user_id) AS wishlistCount,
        IF(EXISTS(SELECT 1 FROM wishlist WHERE user_id = #{userId} AND strf_id = s.strf_id), 1, 0) AS userWishlist
        FROM stay_tour_restaur_fest s
        JOIN location_detail ld ON s.location_detail_id = ld.location_detail_id
        JOIN location l ON ld.location_id = l.location_id
        LEFT JOIN review r ON s.strf_id = r.strf_id
        LEFT JOIN wishlist w ON s.strf_id = w.strf_id AND w.user_id = #{userId}
        JOIN amenipoint ap ON s.strf_id = ap.strf_id
        WHERE s.category = #{category}
        AND ap.amenity_id IN
        <foreach item="amenityId" collection="amenityIds" open="(" separator="," close=")">
            #{amenityId}
        </foreach>
        GROUP BY s.strf_id
        ORDER BY s.created_at DESC
        LIMIT #{startIdx}, #{size}
    </select>


    <!--
    <select id="searchAllList">
        SELECT s.strf_id AS strfId, s.title AS strfTitle, s.category, l.title AS locationName,
        AVG(r.rating) AS averageRating, COUNT(r.review_id) AS reviewCount, COUNT(w.user_id) AS wishlistCount,
        IF(EXISTS(SELECT 1 FROM wishlist WHERE user_id = #{userId} AND strf_id = s.strf_id), 1, 0) AS userWishlist,
        GROUP_CONCAT(a.title) AS amenities,
        (SELECT COUNT(*)
        FROM stay_tour_restaur_fest s2
        WHERE
        <if test="searchWord != null">
            (s2.title LIKE CONCAT('%', #{searchWord}, '%') OR
            l.title LIKE CONCAT('%', #{searchWord}, '%') OR
            ld.detail_title LIKE CONCAT('%', #{searchWord}, '%') OR
            a.title LIKE CONCAT('%', #{searchWord}, '%'))
        </if>
        <if test="category != null">
            AND s2.category = #{category}
        </if>
        ) AS totalCount,
        (SELECT COUNT(*)
        FROM stay_tour_restaur_fest s2 WHERE s2.category = '숙소'
        <if test="searchWord != null">
            AND (s2.title LIKE CONCAT('%', #{searchWord}, '%') OR
            l.title LIKE CONCAT('%', #{searchWord}, '%') OR
            ld.detail_title LIKE CONCAT('%', #{searchWord}, '%') OR
            a.title LIKE CONCAT('%', #{searchWord}, '%'))
        </if>
        ) AS accommodationCount,
        (SELECT COUNT(*)
        FROM stay_tour_restaur_fest s2 WHERE s2.category = '음식점'
        <if test="searchWord != null">
            AND (s2.title LIKE CONCAT('%', #{searchWord}, '%') OR
            l.title LIKE CONCAT('%', #{searchWord}, '%') OR
            ld.detail_title LIKE CONCAT('%', #{searchWord}, '%') OR
            a.title LIKE CONCAT('%', #{searchWord}, '%'))
        </if>
        ) AS restaurantCount,
        (SELECT COUNT(*)
        FROM stay_tour_restaur_fest s2 WHERE s2.category = '관광'
        <if test="searchWord != null">
            AND (s2.title LIKE CONCAT('%', #{searchWord}, '%') OR
            l.title LIKE CONCAT('%', #{searchWord}, '%') OR
            ld.detail_title LIKE CONCAT('%', #{searchWord}, '%') OR
            a.title LIKE CONCAT('%', #{searchWord}, '%'))
        </if>
        ) AS touristCount,
        (SELECT COUNT(*)
        FROM stay_tour_restaur_fest s2 WHERE s2.category = '축제'
        <if test="searchWord != null">
            AND (s2.title LIKE CONCAT('%', #{searchWord}, '%') OR
            l.title LIKE CONCAT('%', #{searchWord}, '%') OR
            ld.detail_title LIKE CONCAT('%', #{searchWord}, '%') OR
            a.title LIKE CONCAT('%', #{searchWord}, '%'))
        </if>
        ) AS festivalCount
        FROM stay_tour_restaur_fest s
        JOIN location_detail ld ON s.location_detail_id = ld.location_detail_id
        JOIN location l ON ld.location_id = l.location_id
        LEFT JOIN review r ON s.strf_id = r.strf_id
        LEFT JOIN wishlist w ON s.strf_id = w.strf_id AND w.user_id = #{userId}
        LEFT JOIN amenipoint ap ON s.strf_id = ap.strf_id
        LEFT JOIN amenity a ON ap.amenity_id = a.amenity_id
        WHERE
        <if test="searchWord != null">
            (s.title LIKE CONCAT('%', #{searchWord}, '%') OR
            l.title LIKE CONCAT('%', #{searchWord}, '%') OR
            ld.detail_title LIKE CONCAT('%', #{searchWord}, '%') OR
            a.title LIKE CONCAT('%', #{searchWord}, '%'))
        </if>
        <if test="category != null">
            AND s.category = #{category}
        </if>
        GROUP BY s.strf_id
        ORDER BY s.created_at DESC
        LIMIT #{startIdx}, #{size}
    </select>
    -->
</mapper>








































