<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.project_quadruaple.expense.ExpenseMapper">

    <insert id="insDe" useGeneratedKeys="true" keyProperty="deId">
        INSERT INTO daily_expense
        SET `for`=#{forText}
    </insert>

    <insert id="insPaidUser">
        INSERT INTO paid_user
        SET de_id=#{deId}
        , price=#{price}
        , trip_user_id
        =(SELECT trip_user_id
        FROM trip_user
        WHERE user_id=#{userId}
        AND trip_id=#{tripId})
    </insert>

    <insert id="insPaidUserSamePrice">
        INSERT INTO paid_user (de_id, price, trip_user_id)
        SELECT
        #{deId},
        #{price},
        trip_user_id
        FROM trip_user
        WHERE trip_id = #{tripId}
        AND user_id IN
        <foreach collection="userIds" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </insert>

    <select id="selExpense">
        SELECT U.user_id
        FROM paid_user P
        LEFT JOIN trip_user TU
        ON TU.trip_user_id=P.trip_user_id
        LEFT JOIN user U
        ON U.user_id=TU.user_id
        LEFT JOIN daily_expense D
        ON D.de_id=P.de_id
        where TU.trip_id = #{tripId}
    </select>

    <select id="selDutchUsers">
        SELECT U.user_id AS userId, U.profile_pic AS profilePic, U.`name`
        FROM user U
        LEFT JOIN trip_user TU
        ON TU.user_id= U.user_id
        WHERE TU.trip_id=#{tripId}
        AND U.user_id NOT IN
        <foreach collection="exceptUsers" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </select>


    <resultMap id="expenses" type="com.green.project_quadruaple.expense.model.res.ExpensesRes">
        <id property="title" column="title" />
        <result property="tripPeriod" column="tripPeriod" />
        <result property="myTotalPrice" column="myTotalPrice" />
        <result property="tripTotalPrice" column="tripTotalPrice" />
        <collection property="expensedList" resultMap="expensedList" />
    </resultMap>

    <resultMap id="expensedList" type="com.green.project_quadruaple.expense.model.dto.ExpenseDto">
        <id property="deId" column="deId" />
        <result property="paidFor" column="paidFor" />
        <result property="totalPrice" column="totalPrice" />
        <collection property="paidUserList" resultMap="paidUserList" />
    </resultMap>

    <resultMap id="paidUserList" type="com.green.project_quadruaple.expense.model.dto.PaidUser">
        <id property="userId" column="userId" />
        <result property="name" column="name" />
        <result property="profilePic" column="profilePic" />
    </resultMap>

    <select id="getExpenses" resultMap="expenses">
        WITH trip_summary AS (
        SELECT
        trip_id,
        SUM(price) AS tripTotalPrice,
        SUM(CASE WHEN user_id = #{userId} THEN price ELSE 0 END) AS myTotalPrice
        FROM depay
        WHERE trip_id = #{tripId}
        GROUP BY trip_id
        ),
        expense_summary AS (
        SELECT
        de_id,
        `for` AS paidFor,
        SUM(price) AS totalPrice
        FROM depay
        WHERE trip_id = #{tripId}
        GROUP BY de_id, `for`
        )
        SELECT
        T.title,
        CONCAT(DATE_FORMAT(T.start_at, '%Y.%m.%d'), '~', DATE_FORMAT(T.end_at, '%m.%d')) AS tripPeriod,
        TS.tripTotalPrice,
        TS.myTotalPrice,
        ES.paidFor,
        ES.totalPrice,
        T.de_id AS deId,
        T.user_id AS userId,
        T.name,
        T.profile_pic AS profilePic
        FROM depay T
        JOIN trip_summary TS ON TS.trip_id = T.trip_id
        JOIN expense_summary ES ON ES.de_id = T.de_id
        WHERE T.trip_id = #{tripId}
        ORDER BY T.de_id
    </select>
</mapper>
