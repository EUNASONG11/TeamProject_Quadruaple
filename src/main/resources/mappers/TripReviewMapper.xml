<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.project_quadruaple.tripreview.TripReviewMapper">
    <!-- 여행기 등록 -->
    <insert id="insTripReview" useGeneratedKeys="true" keyProperty="tripReviewId">
        INSERT INTO trip_review
           SET trip_review_id = #{tripReviewId}
             , trip_id = #{tripId}
             , user_id = #{userId}
             , title = #{title}
             , content = #{content}
    </insert>

    <insert id="insTripReviewPic">
        INSERT INTO trip_review_pic
        (trip_review_pic, trip_review_id)
        VALUES
        <foreach collection="tripReviewPic" item="pic" separator=",">
            (#{pic}, #{tripReviewId})
        </foreach>
    </insert>

    <!-- 여행기 조회 -->
    <select id="getMyTripReviews" resultMap="tripReviewResultMap">
        SELECT A.trip_id, A.title, A.content, B.trip_review_pic,
        (SELECT COUNT(user_id) FROM trip_like WHERE trip_review_id = A.trip_review_id) AS like_count
          FROM trip_review A
          LEFT JOIN trip_review_pic B
            ON A.trip_review_id = B.trip_review_id
         WHERE A.user_id = #{userId}
         ORDER BY
          CASE WHEN #{orderType} = 'latest' THEN A.created_at END DESC,
          CASE WHEN #{orderType} = 'popular' THEN like_count END DESC
    </select>

    <select id="getAllTripReviews" resultMap="tripReviewResultMap">
        SELECT A.trip_id, A.title, A.content, B.trip_review_pic,
        (SELECT COUNT(user_id) FROM trip_like WHERE trip_review_id = A.trip_review_id) AS like_count
          FROM trip_review A
          LEFT JOIN trip_review_pic B
            ON A.trip_review_id = B.trip_review_id
         ORDER BY
          CASE WHEN #{orderType} = 'latest' THEN A.created_at END DESC,
          CASE WHEN #{orderType} = 'popular' THEN like_count END DESC
    </select>

    <resultMap id="tripReviewResultMap" type="com.green.project_quadruaple.tripreview.model.TripReviewGetDto">
        <id property="tripId" column="trip_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="likeCount" column="like_count"/>
        <collection property="tripReviewPics" ofType="java.lang.String">
            <result column="trip_review_pic"/>
        </collection>
    </resultMap>

    <!-- 여행기 수정 -->
    <update id="updTripReview">
        UPDATE trip_review
        <set>
            <if test=" title != null and title != '' " >
                title = #{title}
            </if>
            <if test=" content != null and content != '' ">
                , content = #{content}
            </if>
        </set>
        WHERE trip_review_id = #{tripReviewId}
    </update>

    <delete id="delTripReviewPic">
        DELETE FROM trip_review_pic
         WHERE trip_review_id = #{tripReviewId}
    </delete>

    <!-- 여행기 삭제 -->
    <select id="selTripReviewByUserId">
        SELECT *
          FROM trip_review
         WHERE trip_review_id = #{tripReviewId}
    </select>

    <delete id="delTripReviewLikeByTripReviewId">
        DELETE FROM trip_like
         WHERE trip_review_id = #{tripReviewId}
    </delete>

    <delete id="delTripReview">
        DELETE FROM trip_review
         WHERE trip_review_id = #{tripReviewId}
    </delete>

    <!-- 여행기 추천 -->
    <insert id="insTripLike">
        INSERT INTO trip_like
           SET user_id = #{userId}
             , trip_review_id = #{tripReviewId}
    </insert>

    <delete id="delTripLike">
        DELETE FROM trip_like
         WHERE user_id = #{userId}
           AND trip_review_id = #{tripReviewId}
    </delete>

    <select id="tripLikeCount">
        SELECT COUNT(user_id)
          FROM trip_like
         WHERE trip_review_id = #{tripReviewId}
    </select>
</mapper>