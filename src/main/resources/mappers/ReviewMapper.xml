<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.project_quadruaple.review.ReviewMapper">
    <select id="getReview" resultMap="reviewPicResultMap">
        SELECT
        a.strf_id as strfId ,
        a.review_id AS reviewId, a.content AS content,
        a.rating AS rating, a.user_id AS writerUserId,
        c.name AS writerUserName, c.profile_pic AS writerUserPic,
        COUNT(a.review_id) AS userWriteReviewCnt,
        CASE
        WHEN a.updated_at IS NOT NULL THEN a.updated_at
        ELSE a.created_at
        END AS reviewWriteDate,
        GROUP_CONCAT(b.title ORDER BY b.title ASC) AS reviewPics
        FROM review a
        LEFT JOIN review_pic b ON a.review_id = b.review_id
        JOIN user c ON a.user_id = c.user_id
        WHERE a.strf_id = #{strfId}
        GROUP BY a.review_id, a.content, a.rating, a.user_id, c.name, c.profile_pic, a.updated_at, a.created_at
        ORDER BY a.review_id DESC
        LIMIT #{startIdx}, #{size}
    </select>
    <resultMap id="reviewPicResultMap" type="com.green.project_quadruaple.review.model.ReviewDto">
        <id property="reviewId" column="reviewId" />
        <result property="strfId" column="strfId" />
        <result property="content" column="content" />
        <result property="rating" column="rating" />
        <result property="writerUserId" column="writerUserId" />
        <result property="writerUserName" column="writerUserName" />
        <result property="writerUserPic" column="writerUserPic" />
        <result property="userWriteReviewCnt" column="userWriteReviewCnt" />
        <result property="reviewWriteDate" column="reviewWriteDate" />
        <collection property="reviewPics" ofType="com.green.project_quadruaple.review.model.ReviewPicSel">
            <result column="reviewPics" />
        </collection>
    </resultMap>

</mapper>
